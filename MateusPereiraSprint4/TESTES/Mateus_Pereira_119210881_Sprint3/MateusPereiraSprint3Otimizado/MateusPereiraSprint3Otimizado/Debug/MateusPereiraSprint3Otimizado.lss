
MateusPereiraSprint3Otimizado.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000212  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000212  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000212  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c3  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b5  00000000  00000000  00000a77  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000035c  00000000  00000000  0000112c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001488  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003db  00000000  00000000  000014f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000111  00000000  00000000  000018cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_1>
   8:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_2>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 93 00 	call	0x126	; 0x126 <main>
  88:	0c 94 cd 00 	jmp	0x19a	; 0x19a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_1>:
#include <util/delay.h>

uint8_t dezena=0, centena=0;

ISR(INT0_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
	if (centena<3)
  9e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  a2:	83 30       	cpi	r24, 0x03	; 3
  a4:	28 f4       	brcc	.+10     	; 0xb0 <__vector_1+0x20>
	{
		dezena++;
  a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <dezena>
  aa:	9f 5f       	subi	r25, 0xFF	; 255
  ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <dezena>
	}
	if (dezena==10)
  b0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <dezena>
  b4:	9a 30       	cpi	r25, 0x0A	; 10
  b6:	69 f4       	brne	.+26     	; 0xd2 <__vector_1+0x42>
	{
		if(centena<3)
  b8:	83 30       	cpi	r24, 0x03	; 3
  ba:	30 f4       	brcc	.+12     	; 0xc8 <__vector_1+0x38>
		{
			centena += 1;
  bc:	8f 5f       	subi	r24, 0xFF	; 255
  be:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			dezena = 0;
  c2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <dezena>
  c6:	05 c0       	rjmp	.+10     	; 0xd2 <__vector_1+0x42>
		}
		else
		{
			centena = 3;
  c8:	83 e0       	ldi	r24, 0x03	; 3
  ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			dezena = 0;
  ce:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <dezena>
		}
	}
}
  d2:	9f 91       	pop	r25
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <__vector_2>:

ISR(INT1_vect)
{
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	8f 93       	push	r24
	if (dezena>0)
  ec:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dezena>
  f0:	88 23       	and	r24, r24
  f2:	21 f0       	breq	.+8      	; 0xfc <__vector_2+0x1c>
	{
		dezena -= 1;
  f4:	81 50       	subi	r24, 0x01	; 1
  f6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <dezena>
  fa:	0f c0       	rjmp	.+30     	; 0x11a <__vector_2+0x3a>
	}
	else
	{
		if (centena>0)
  fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 100:	88 23       	and	r24, r24
 102:	39 f0       	breq	.+14     	; 0x112 <__vector_2+0x32>
		{
			centena -= 1;
 104:	81 50       	subi	r24, 0x01	; 1
 106:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			dezena=9;
 10a:	89 e0       	ldi	r24, 0x09	; 9
 10c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <dezena>
 110:	04 c0       	rjmp	.+8      	; 0x11a <__vector_2+0x3a>
		}
		else
		{
			dezena=0;
 112:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <dezena>
			centena=0;
 116:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
		}
	}
}
 11a:	8f 91       	pop	r24
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <main>:
	
int main(void)
{
	DDRB  = 0b11111111;
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	84 b9       	out	0x04, r24	; 4
	DDRD  = 0b11110011;
 12a:	83 ef       	ldi	r24, 0xF3	; 243
 12c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00001100;
 12e:	8c e0       	ldi	r24, 0x0C	; 12
 130:	8b b9       	out	0x0b, r24	; 11
	
	EICRA = 0b00001010;
 132:	8a e0       	ldi	r24, 0x0A	; 10
 134:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = 0b00000011;
 138:	83 e0       	ldi	r24, 0x03	; 3
 13a:	8d bb       	out	0x1d, r24	; 29
	sei();
 13c:	78 94       	sei
	
	while (1)
	{
		PORTB = 0;
 13e:	15 b8       	out	0x05, r1	; 5
		PORTB ^= 0b11100000;
 140:	95 b1       	in	r25, 0x05	; 5
 142:	80 ee       	ldi	r24, 0xE0	; 224
 144:	89 27       	eor	r24, r25
 146:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	8f e9       	ldi	r24, 0x9F	; 159
 14a:	9f e0       	ldi	r25, 0x0F	; 15
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <main+0x26>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0x2c>
 152:	00 00       	nop
		_delay_ms(1);
		PORTB &= 0b00000000;
 154:	85 b1       	in	r24, 0x05	; 5
 156:	15 b8       	out	0x05, r1	; 5
		PORTB |= dezena;
 158:	95 b1       	in	r25, 0x05	; 5
 15a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <dezena>
 15e:	89 2b       	or	r24, r25
 160:	85 b9       	out	0x05, r24	; 5
		PORTB ^= 0b11010000;
 162:	95 b1       	in	r25, 0x05	; 5
 164:	80 ed       	ldi	r24, 0xD0	; 208
 166:	89 27       	eor	r24, r25
 168:	85 b9       	out	0x05, r24	; 5
 16a:	8f e9       	ldi	r24, 0x9F	; 159
 16c:	9f e0       	ldi	r25, 0x0F	; 15
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <main+0x48>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0x4e>
 174:	00 00       	nop
		_delay_ms(1);
		PORTB &= 0b00000000;
 176:	85 b1       	in	r24, 0x05	; 5
 178:	15 b8       	out	0x05, r1	; 5
		PORTB |= centena;
 17a:	95 b1       	in	r25, 0x05	; 5
 17c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 180:	89 2b       	or	r24, r25
 182:	85 b9       	out	0x05, r24	; 5
		PORTB ^= 0b10110000;
 184:	95 b1       	in	r25, 0x05	; 5
 186:	80 eb       	ldi	r24, 0xB0	; 176
 188:	89 27       	eor	r24, r25
 18a:	85 b9       	out	0x05, r24	; 5
 18c:	8f e9       	ldi	r24, 0x9F	; 159
 18e:	9f e0       	ldi	r25, 0x0F	; 15
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <main+0x6a>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0x70>
 196:	00 00       	nop
 198:	d2 cf       	rjmp	.-92     	; 0x13e <main+0x18>

0000019a <_exit>:
 19a:	f8 94       	cli

0000019c <__stop_program>:
 19c:	ff cf       	rjmp	.-2      	; 0x19c <__stop_program>
